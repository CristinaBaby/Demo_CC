apply plugin: 'com.android.application'

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.1"

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 23
        multiDexEnabled true
        android.enforceUniquePackageName=false
        ndk {
            // 设置支持的 SO 库构架，注意这里要根据你的实际情况来设置
            abiFilters "armeabi", "armeabi-v7a"
        }
    }

    sourceSets.main {
        java.srcDir "src"
        res.srcDir "res"
        jniLibs.srcDir "libs"
        manifest.srcFile "AndroidManifest.xml"
        assets.srcDir "assets"
    }

    signingConfigs {

       release {
            if (project.hasProperty("RELEASE_STORE_FILE")) {
                storeFile file(RELEASE_STORE_FILE)
                storePassword RELEASE_STORE_PASSWORD
                keyAlias RELEASE_KEY_ALIAS
                keyPassword RELEASE_KEY_PASSWORD
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            if (project.hasProperty("RELEASE_STORE_FILE")) {
                signingConfig signingConfigs.release
            }
        }
    }

    productFlavors {

        GOOGLEPLAY {
            applicationId "net.makerlabs.android_snowcone3"
            versionCode 12
            versionName "1.2"
            manifestPlaceholders =
                    [platformcode: "32",
                    
                     Flurry_Key: "MZ9QV7JP7PJ77GR9YY67",
                     GA_Key: "UA-77948577-2",
                     Quantcast_API_Key:"",
                    //MoPub ads ID
                     Phone_Banner: "/50170743/MLABS1067GP-Phone-Banner",
                     Phone_Interstitial: "/50170743/MLABS1067GP-Phone-Interstitial",

                     Pad_Banner: "/50170743/MLABS1067GP-Tablet-Banner",
                     Pad_Interstitial: "/50170743/MLABS1067GP-Tablet-Interstitial",


                     Rewarded_AppID: "",
                     Phone_Rewarded_Zoneid: "",
                     Tablet_Rewarded_Zoneid: ""
                    ]
        }

//        AMAZON {
//            applicationId "net.makerlabs.amazon_snowcone"
//            versionCode 10
//            versionName "1.0"
//            manifestPlaceholders =
//                    [platformcode: "33",
//
//                     Flurry_Key: "CWDKNNG7JNT3HWXXW3DY",
//                     Quantcast_API_Key:"08m9d6gbojhf5xd2-kuh0au125jr53kxy",
//                    //MoPub ads ID
//                     MoPub_phone_banner: "0c79e2f157324003b1cb1a4127c8ce8c",
//                     MoPub_phone_fullscreen: "408455286f7d470c83ca340ce3cde259",
//                     MoPub_phone_reward: "MoPub_phone_reward",
//                     MoPub_tablet_banner: "fecf2b2bad4442f4a47711666b8e167d",
//                     MoPub_tablet_fullscreen: "MoPub_tablet_fullscreen",
//                     MoPub_tablet_reward: "155b386ff900446ebc3b1368a038774e",
//                     AppID: "5783058504b01602102dfd8f",
//                     AppSignature: "f3ded94413833d30cb58984e1f2e4a6a73b54773",
//                    //DFP ads ID
//                     Banner: "Banner",
//                     Interstitial: "Interstitial",
//                     Rect: "Rect",
//                     Reward_APPID: "Reward_APPID",
//                     Reward_SecurityToken: "Reward_SecurityToken"
//                    ]
//        }

    }

    dexOptions {
        incremental true
        javaMaxHeapSize "4g"
    }
}


repositories {
    flatDir {
        dirs 'libs'  //this way we can find the .aar file in libs folder
    }
}

allprojects {
    repositories {
        jcenter()

        //Adcolony sdk v3.0+ 的maven 仓库地址
        maven { url 'https://adcolony.bintray.com/AdColony' }
    }
}
buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:2.1.2'
        classpath 'com.google.gms:google-services:3.0.0'
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        jcenter()
    }
}
dependencies {

    //解决Android 64k问题所必须的包

    //特别注意：下面的公共库默认全部屏蔽，Android端具体需要添加哪些公共库以最新的
    //公共库关联脚本文档为准：ssh://git@stash.stm.com:7999/cmt/gitsubmodule.git 【android-studio-xxx分支】
    //请特别注意三方库的几种关联方式：
    //1.由公司提供的jar包，从stash上检在libs目录下后，可以在Module Setting->dependencies里直接添加file dependency,找到对应目录的jar包进行添加；
    //2.由公司提供的aar包，从stash上检在libs目录下后，按屏蔽的代码格式添加aar包；
    //3.由中央仓库提供的三方包，原则上应该在Module Setting->dependencies里选libaray dependency,然后选择对应包，但是由于此种情况下选择的包和
    //当前项目的buildTool版本相关，实际在使用过程中我们需要到的包版本可能不一样,
    //所以进行手动写代码添加.如下方屏蔽代码的最后一排添加googleServices包的脚本代码
    //对于第三种包，具体应该使用哪个版本，用哪种方式添加，以公共库关联脚本文档为准！
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.android.support:multidex:1.0.1'

    compile 'com.google.android.gms:play-services-ads:10.2.0'
    compile 'com.google.android.gms:play-services-analytics:10.2.0'
    compile 'com.google.android.gms:play-services-gcm:10.2.0'
    compile 'com.android.support:appcompat-v7:23.2.1'

    compile(name: 'lib_ads/AudienceNetwork-v4.12.0', ext: 'aar')
    compile(name: 'lib_ads/ads_sdk', ext: 'aar')
    compile(name: 'lib_analytics/analyticscenter', ext: 'aar')
    compile(name: 'lib_internal/internallibrary', ext: 'aar')
    compile(name: 'lib_sdk_support/sdk_support', ext: 'aar')
    compile fileTree(dir: 'libs/lib_cocos2dx', include: ['*.jar'])

    //Adcolony sdk v3.0+
    compile 'com.adcolony:sdk:3.1.0'
}

// Add this at the bottom of build.gradle file
apply plugin: 'com.google.gms.google-services'